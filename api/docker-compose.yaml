version: '3'

services:
  mongodb:
    container_name: mongodb
    image: mongo:latest
    restart: always
    ports:
      - 27017:27017
    volumes:
      - data-volume:/data/db
    networks:
      - node-network
  # cache:
  #   container_name: cache
  #   image: redis:latest
  #   restart: always
  #   ports:
  #     - 6379:6379
  #   command: redis-server --save 20 1 --loglevel warning
  #   volumes:
  #     - cache:/data
  #   networks:
  #     - node-network

  mongo-seed:
    build:
      context: ./mongo-seed
      dockerfile: ./DockerFile
    depends_on:
      - mongodb
    links:
      - 'mongodb'
    networks:
      - node-network

  app-users:
    container_name: app-user
    image: app-user:0.0.1
    build:
      context: ./
      target: development
      dockerfile: ./apps/app-users/Dockerfile
    command: npm run start:dev app-users
    env_file:
      - .env.development.local
    ports:
      - 8080:8080
    expose:
      - 8080
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    working_dir: /usr/src/app
    depends_on:
      - mongodb
    networks:
      - node-network

  app-gateway:
    container_name: app-gateway
    image: app-gateway:0.0.1
    build:
      context: ./
      target: development
      dockerfile: ./apps/app-gateway/Dockerfile
    command: npm run start:dev app-gateway
    env_file:
      - .env.development.local
    ports:
      - 3000:3000
    expose:
      - 3000
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    working_dir: /usr/src/app
    depends_on:
      - app-users
    networks:
      - node-network

volumes:
  cache:
    driver: local
  data-volume:
    driver: local

networks:
  node-network:
    driver: bridge
